// <auto-generated />
using System;
using BoundfoxStudios.Smudgy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoundfoxStudios.Smudgy.Data.Migrations
{
    [DbContext(typeof(SmudgyContext))]
    [Migration("20210310215040_SessionPlayers")]
    partial class SessionPlayers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.Player", b =>
                {
                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.Property<string>("SocketId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ClusterId");

                    b.HasIndex("SocketId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.Session", b =>
                {
                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HostPlayerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Language")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundTimeInSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundsToPlay")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ClusterId");

                    b.HasIndex("HostPlayerId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.SessionRound", b =>
                {
                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrawerPlayerClusterId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("DrawerPlayerId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("WordToDraw")
                        .HasColumnType("TEXT");

                    b.HasKey("ClusterId");

                    b.HasIndex("DrawerPlayerClusterId");

                    b.HasIndex("SessionId");

                    b.ToTable("SessionRound");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.SessionRoundGuesser", b =>
                {
                    b.Property<int>("ClusterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("GuesserClusterId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GuesserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RoundId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ClusterId");

                    b.HasAlternateKey("Id");

                    b.HasIndex("GuesserClusterId");

                    b.HasIndex("GuesserId");

                    b.ToTable("SessionRoundGuesser");
                });

            modelBuilder.Entity("PlayerSession", b =>
                {
                    b.Property<int>("PlayersClusterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionsClusterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayersClusterId", "SessionsClusterId");

                    b.HasIndex("SessionsClusterId");

                    b.ToTable("PlayerSession");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.Session", b =>
                {
                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Player", "HostPlayer")
                        .WithMany()
                        .HasForeignKey("HostPlayerId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HostPlayer");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.SessionRound", b =>
                {
                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Player", "DrawerPlayer")
                        .WithMany()
                        .HasForeignKey("DrawerPlayerClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Session", "Session")
                        .WithMany("Rounds")
                        .HasForeignKey("SessionId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrawerPlayer");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.SessionRoundGuesser", b =>
                {
                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Player", "Guesser")
                        .WithMany()
                        .HasForeignKey("GuesserClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.SessionRound", "Round")
                        .WithMany("Guessers")
                        .HasForeignKey("GuesserId")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guesser");

                    b.Navigation("Round");
                });

            modelBuilder.Entity("PlayerSession", b =>
                {
                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoundfoxStudios.Smudgy.Data.Entities.Session", null)
                        .WithMany()
                        .HasForeignKey("SessionsClusterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.Session", b =>
                {
                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("BoundfoxStudios.Smudgy.Data.Entities.SessionRound", b =>
                {
                    b.Navigation("Guessers");
                });
#pragma warning restore 612, 618
        }
    }
}
